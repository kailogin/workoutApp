// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test BaseModal 1`] = `
<View
  onMoveShouldSetResponder={[Function]}
  onMoveShouldSetResponderCapture={[Function]}
  onResponderEnd={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderReject={[Function]}
  onResponderRelease={[Function]}
  onResponderStart={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  onStartShouldSetResponderCapture={[Function]}
  onSwipeDown={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <Modal
    animationType="none"
    deviceHeight={null}
    deviceWidth={null}
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    panResponderThreshold={4}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={false}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={true}
  >
    <View
      accessible={true}
      focusable={true}
      forwardedRef={[Function]}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      deviceHeight={null}
      deviceWidth={null}
      forwardedRef={[Function]}
      hideModalContentWhileAnimating={false}
      onBackdropPress={[Function]}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      panResponderThreshold={4}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      statusBarTranslucent={false}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#000000",
          "borderTopColor": "#F2994A",
          "borderTopWidth": 3,
          "flex": 1,
          "justifyContent": "center",
          "margin": 37.5,
          "marginBottom": 0,
          "marginLeft": 20,
          "marginRight": 20,
          "marginTop": 90,
          "transform": Array [
            Object {
              "translateY": 1334,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <View
        style={
          Object {
            "flex": 1,
            "width": "90%",
          }
        }
      >
        <View
          style={
            Object {
              "alignContent": "center",
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <h4>
            Test me
          </h4>
        </View>
        <View
          onLayout={[Function]}
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "left": 0,
              "opacity": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          testID="toastAnimatedContainer"
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#FFF",
                "borderLeftColor": "#69C779",
                "borderLeftWidth": 5,
                "borderRadius": 6,
                "elevation": 2,
                "flexDirection": "row",
                "height": 60,
                "opacity": 1,
                "shadowOffset": Object {
                  "height": 0,
                  "width": 0,
                },
                "shadowOpacity": 0.1,
                "shadowRadius": 6,
                "width": 340,
              }
            }
            testID="toastTouchableContainer"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "flex-start",
                    "flex": 1,
                    "justifyContent": "center",
                    "paddingHorizontal": 25,
                  },
                  undefined,
                ]
              }
              testID="toastContentContainer"
            />
          </View>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;
